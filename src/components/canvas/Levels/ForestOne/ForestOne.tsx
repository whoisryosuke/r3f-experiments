/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Block: THREE.Mesh;
    Floor: THREE.Mesh;
    Step: THREE.Mesh;
    Step_2: THREE.Mesh;
    Tree: THREE.Mesh;
  };
  materials: {
    Cube: THREE.MeshStandardMaterial;
    Floor: THREE.MeshStandardMaterial;
    Tree: THREE.MeshStandardMaterial;
  };
};

export default function ForestOne({
  ...props
}: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(
    "/models/Forest Level 1.gltf"
  ) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Block.geometry}
        material={materials.Cube}
        position={[8, 1, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Floor.geometry}
        material={materials.Floor}
        scale={[8.94, 1.07, 6.18]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Step.geometry}
        material={materials.Floor}
        position={[0, 1, -5]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Step_2.geometry}
        material={materials.Floor}
        position={[0, 2, -5]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Tree.geometry}
        material={materials.Tree}
        position={[-6, 1, -6]}
        scale={[1.15, 1, 1.15]}
      />
    </group>
  );
}

useGLTF.preload("/models/Forest Level 1.gltf");
